{"ast":null,"code":"// 5类商品\nexport const categories = [{\n  id: 1,\n  name: \"水果\",\n  icon: \"🍎\"\n}, {\n  id: 2,\n  name: \"肉类\",\n  icon: \"🥩\"\n}, {\n  id: 3,\n  name: \"蔬菜\",\n  icon: \"🥦\"\n}, {\n  id: 4,\n  name: \"饮料\",\n  icon: \"🥤\"\n}, {\n  id: 5,\n  name: \"零食\",\n  icon: \"🍪\"\n}];\n\n// 每类商品的icon库\nconst goodsIcons = {\n  1: [\"🍎\", \"🍌\", \"🍇\", \"🍉\", \"🍓\"],\n  2: [\"🥩\", \"🍗\", \"🍖\", \"🥓\", \"🍤\"],\n  3: [\"🥦\", \"🥕\", \"🌽\", \"🍆\", \"🥒\"],\n  4: [\"🥤\", \"🧃\", \"🥛\", \"🍵\", \"☕\"],\n  5: [\"🍪\", \"🍫\", \"🍿\", \"🍩\", \"🍰\"]\n};\n\n// 洗牌\nexport function shuffle(arr) {\n  const a = arr.slice();\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\n// 生成20个商品，类别分布随机\nexport function generateGoods() {\n  let left = 20;\n  const counts = [];\n  for (let i = 0; i < categories.length; i++) {\n    let count = i === categories.length - 1 ? left : Math.floor(Math.random() * (left - (categories.length - i - 1))) + 1;\n    counts.push(count);\n    left -= count;\n  }\n  const goods = [];\n  categories.forEach((cat, idx) => {\n    for (let i = 0; i < counts[idx]; i++) {\n      const iconList = goodsIcons[cat.id];\n      goods.push({\n        id: `${cat.id}-${i}-${Math.random().toString(36).slice(2, 6)}`,\n        name: `${cat.name}${i + 1}`,\n        categoryId: cat.id,\n        icon: iconList[i % iconList.length]\n      });\n    }\n  });\n  return shuffle(goods);\n}","map":{"version":3,"names":["categories","id","name","icon","goodsIcons","shuffle","arr","a","slice","i","length","j","Math","floor","random","generateGoods","left","counts","count","push","goods","forEach","cat","idx","iconList","toString","categoryId"],"sources":["/Users/tanyinglu/Develops/projects/aigame/aigame/src/utils.ts"],"sourcesContent":["import { Category, Goods } from \"./types\";\n\n// 5类商品\nexport const categories: Category[] = [\n  { id: 1, name: \"水果\", icon: \"🍎\" },\n  { id: 2, name: \"肉类\", icon: \"🥩\" },\n  { id: 3, name: \"蔬菜\", icon: \"🥦\" },\n  { id: 4, name: \"饮料\", icon: \"🥤\" },\n  { id: 5, name: \"零食\", icon: \"🍪\" }\n];\n\n// 每类商品的icon库\nconst goodsIcons: Record<number, string[]> = {\n  1: [\"🍎\", \"🍌\", \"🍇\", \"🍉\", \"🍓\"],\n  2: [\"🥩\", \"🍗\", \"🍖\", \"🥓\", \"🍤\"],\n  3: [\"🥦\", \"🥕\", \"🌽\", \"🍆\", \"🥒\"],\n  4: [\"🥤\", \"🧃\", \"🥛\", \"🍵\", \"☕\"],\n  5: [\"🍪\", \"🍫\", \"🍿\", \"🍩\", \"🍰\"]\n};\n\n// 洗牌\nexport function shuffle<T>(arr: T[]): T[] {\n  const a = arr.slice();\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\n// 生成20个商品，类别分布随机\nexport function generateGoods(): Goods[] {\n  let left = 20;\n  const counts: number[] = [];\n  for (let i = 0; i < categories.length; i++) {\n    let count =\n      i === categories.length - 1\n        ? left\n        : Math.floor(Math.random() * (left - (categories.length - i - 1))) + 1;\n    counts.push(count);\n    left -= count;\n  }\n  const goods: Goods[] = [];\n  categories.forEach((cat, idx) => {\n    for (let i = 0; i < counts[idx]; i++) {\n      const iconList = goodsIcons[cat.id];\n      goods.push({\n        id: `${cat.id}-${i}-${Math.random().toString(36).slice(2, 6)}`,\n        name: `${cat.name}${i + 1}`,\n        categoryId: cat.id,\n        icon: iconList[i % iconList.length]\n      });\n    }\n  });\n  return shuffle(goods);\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}